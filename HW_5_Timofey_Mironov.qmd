---
title: "HW_5_Timofey_Mironov"
author: "Timofey_Mironov"
format: html
editor: visual
---

# Домашнее Задание № 5

```{r}
# Импортируем необходимые библиотеки
library(ggplot2)
library(tidyverse)
library(car)
library(survival)
library(ggsurvfit)
library(survminer)

```

```{r}
# Читаем датасет
cancer_data = read.csv('C:/Users/Тимофей/Downloads/wisconsin_breast_cancer.csv')

print(head(cancer_data, 3)) # Данные считались, не повреждены
sum(is.na(cancer_data)) # есть 569 пропусков, пока ничего с ними не делаем
```

### Задание № 1

Создайте регрессионную модель, которая бы описывала связь среднего радиуса опухоли и средней площади (а), среднего периметра (б), средней симметричности (в).

Постройте графики, на которых отразите регрессионную прямую, и прокомментируйте свои находки.

```{r}
# Оцениваем пропуски непосредственно в изучаемых колонках
sum(is.na(cancer_data[c("radius_mean", "area_mean", "perimeter_mean", "symmetry_mean")]))
# Пропусков нет -> можно спокойно продолжать работу
```

```{r}
str(cancer_data)
# Все переменные числовые, непрерывные -> Подойдёт линейная регрессия.

# Построим модель
lr_1 <- lm(radius_mean~area_mean + perimeter_mean +                      symmetry_mean,
           data = cancer_data)
# Смотрим результаты
summary(lr_1)
```

```{r}
# Строим графики
cancer_data %>%
    ggplot(aes(x = area_mean, y = radius_mean)) +
    geom_point() +
    labs(title = "График зависимость среднего радиуса и средней площади опухоли",
      x = "Площадь опухоли",
      y = "Радиус опухоли") + 
    geom_smooth(method = "lm")
    `geom_smooth()` using formula = 'y ~ x'
```

```{r}
# Средний радиус и средний периметр
cancer_data %>%
    ggplot(aes(x = perimeter_mean, y = radius_mean)) +
    geom_point() +
    labs(title = "Зависимость среднего радиуса и сренего периметра опухоли", 
      x = "Среднего периметра опухоли",
      y = "Средний радиус опухоли") +
    geom_smooth(method = "lm")
    `geom_smooth()` using formula = 'y ~ x'
```

```{r}
# Радиус и симметричность
cancer_data %>%
    ggplot(aes(x = symmetry_mean, y = radius_mean)) +
    geom_point() +
    labs(title = "Зависимость среднего радиуса и среней     симметричности опухоли",
      x = "Средняя симметричности опухоли",
      y = "Средний радиус опухоли") +
    geom_smooth(method = "lm")
    `geom_smooth()` using formula = 'y ~ x'
```

### Визуальная оценка:

Все исследуемые факторы и зависимая переменная имеют линейную зависимость. (Зависимая переменная - Средний радиус)

```{r}
# Оцениваем нормальность распределения остатков
shapiro.test(residuals(lr_1))
# p_value < 0.05 -> Отвергаем нулевую гипотезу о нормальном распределении
```

```{r}
# Проверим остатки на требование гомоскедастичности
plot(lr_1, which = 1)
# На визуализации видно что точки неравномерно распределены.
# Слева от центра кластеров из точке значительно больше
```

#### Теперь нужно оценить визуализацию распределения независимых переменных. 

Вывод: Не выполняется требование гомскедастичности

```{r}
# Средняяп площадь:Средняя симметричность
cancer_data %>%
    ggplot(aes(x = area_mean, y = symmetry_mean)) +
    geom_point(color = 'lightgreen') +
    labs(title = "Зависимость средней площади и сренеей симметричности опухоли",
      x = "Средняя площадь опухоли",
      y = "Средняя симметричность опухоли") 
```

```{r}
# Средняя площадь:Средний периметр
cancer_data %>%
    ggplot(aes(x = area_mean, y = perimeter_mean)) +
    geom_point(color = 'purple') +
    labs(title = "Зависимость средней площади и сренего периметра опухоли",
      x = "Средняя площадь опухоли",
      y = "Средний периметр опухоли")
```

```{r}
# Средний периметр:средняя симметричность
cancer_data %>%
    ggplot(aes(x = perimeter_mean, y = symmetry_mean)) +
    geom_point(color = 'orange') +
    labs(title = "Зависимость среднего периметра и сренеей симметричности опухоли",
      x = "Средней симметричности опухоли",
      y = "Средний периметр опухоли")
```

#### Исходя из графиков делаем следующие выводы:

1.  Сильная линейная зависимость имеется между средней площадьюю и средним периметром. -\> эти признаки сильно коррелируют друг с другом -\> Такие признаки ведут к ухудшению качества модели -\> Разумно избавиться от одного из них
2.   Требование гомоскедасичности не выполнено-\> следует заменить зависимую переменную, ну или попытаться преобразовать.

# Задание № 2

Пусть колонка с диагнозом принимает следующие значения: злокачественная опухоль — 1, а доброкачественная — 0. Постройте модель, которая бы прогнозировала вероятность возникновения злокачественной опухоли от среднего радиуса (а), средней площади (б), средней текстуры (в).

Постройте графики. Создайте модель, которая бы прогнозировала вероятность возникновения злокачественной опухоли от всех трех перечисленных факторов.

```{r}
# В колонке "diagnosis": M-злокачественная, В-доброкачественная
# Преобразуем колонку
cancer_data$diagnosis <- ifelse(cancer_data$diagnosis == 'M', 1, 0)

head(cancer_data, 30) # Преобразование работает
```

```{r}
# На этот раз наша переменная категориальная, бинарная. Следовательно, нам подойдёт логистическая регрессия.
log_regression <- 
  glm(diagnosis ~ radius_mean +
        area_mean +
        texture_mean,
      data = cancer_data,
      family = 'binomial'
)

summary(log_regression)
```

-   P_value \> alpha(0.05) для радиуса и площади -\> связь не влияет на вероятность диагностирования.

-   P_value \< alpha(0.05) для текстуры -\> статистически отражает взаимосвязь с зависимой переменной, т.е. типом опухоли

```{r}
exp(coefficients(log_regression))
```

Видим, что средняя текстура действительно является достоверным признаком.

### Визуализируем

```{r}
# Кривая логистической регрессии
# Средний Радиус:Тип опухоли
cancer_data %>% 
  ggplot(aes(x = radius_mean, y = diagnosis)) +
  geom_point(color = 'lightblue') +
  labs(title = "Зависимость типа опухоли и сренего радиуса опухоли",
      x = "Средний радиус опухоли",
      y = "Тип опухоли") +
    geom_smooth(method = "glm", 
                method.args = list(family = "binomial"))

```

```{r}
# Средняя площадь:Тип опухоли
cancer_data %>%
    ggplot(aes(x = area_mean, y = diagnosis)) +
    geom_point(color='red') +
    labs(title = "Зависимость типа опухоли и среней площади опухоли",
      x = "Средняя площадь опухоли",
      y = "Тип опухоли") +
    geom_smooth(method = "glm",
                
                method.args = list(family = "binomial"))
```

```{r}
# Текстура:Тип
cancer_data %>%
    ggplot(aes(x = texture_mean, y = diagnosis)) +
    geom_point(color = 'pink') +
    labs(title = "Зависимость типа опухоли и сренего значения текстуры опухоли",
      x = "Средняя текстура опухоли",
      y = "Тип опухоли") +
    geom_smooth(method = "glm", 
                method.args = list(family = "binomial"))
```

Кривая вообще не попадает на точки

```{r}
# Модель, отражающая прогноз вероятности злокачественной опухоли от всех трёх факторов в сумме.
log_regression_2 <- 
  glm(
    diagnosis ~ radius_mean * area_mean * texture_mean,
      data = cancer_data,
      family = "binomial"
  )

summary(log_regression_2)
```

### Итог: 

P_value везде \> alpha -\> все взаимодействия не имеют статистисческой значимости.

# Задание № 3 

Для выполнения этого задания вам понадобится датасет lung, который встроен в пакет survival. Установите этот пакет и загрузите датасет.

Датасет содержит следующий набор переменных:

-   inst: код учреждения;
-   time: время выживаемости в днях;
-   status: 1 = цензурирование, 2 = смерть;
-   age: возраст в годах;
-   sex: мужской = 1, женский = 2;
-   ph.ecog: шкала опросника ECOG (оценку проводит врач). 0 = отсутствие симптомов, 1= симптомы есть, но пациент наблюдается амбулаторно, 2 = меньше половины дня пациент вынужден проводить в постели, 3 = больше половины дня нуждается в отдыхе лежа, но не прикован к постели, 4 = прикован к постели;
-   ph.karno: шкала Карновского (от 0 до 100, от худшего к лучшему) по оценке врача;
-   pat.karno: шкала Карновского (от 0 до 100, от худшего к лучшему) по оценке пациента;
-   meal.cal: калории потребляемой пищи;
-   wt.loss: потеря веса за последние полгода.

Создайте переменную `event`, в которой отразите наличие или отсутствие (1 или 0) интересующего события — смерти пациента.

Изучите работу функций `Surv()`, `survfit()` и `ggsurvplot()`:

-   Постройте кривые выживаемости в зависимости от пола (на одном графике должны получиться две кривые для каждого пола и таблица числа пациентов, подверженных риску (at risk) под ним). Поясните получившееся значение p-value для лог-рангового теста и опишите наблюдаемые результаты.

-   Постройте график кумулятивной функции рисков (cumulative hazard function) для пола. Проинтерпретируйте график.

-   С помощью функции `coxph()` постройте регрессию Кокса и оцените влияние пола на выживаемость. Что вы можете сказать о полученных результатах?

```{r}
lung_df <- survival::lung
head(lung)
```

```{r}
# Создаём переменную event
lung$event <- ifelse(lung$status == 2,1,0)
head(lung, 3)
```

```{r}
# Нас инетерсуют пациенты с летальым исходом
lung_death <- filter(lung, lung$event == 1)
head(lung_death, 3)
```

```{r}
# График выживаемости в зависимотси от пола
surv <- surv_fit(Surv(time, status) ~ sex, data = lung_death)
ggsurvplot(
  surv,
  conf.int = TRUE,
  surv.median.line = 'hv',
  risk.table = TRUE,
)
```

Доверительные интервалы пересекаются -\> Скорее всего, половой разницы в контексте выживаемости нет

```{r}
# ЛОГ-ранг тес
survdiff(Surv(time,status) ~ sex, data = lung_death)
```

p(p_vlaue) = 0.1 -\> p_value \> alpha -\> принимаем нулевую гипотезу

**Итог:** Статистически значимая разница выживаемости между двумя группами отстутствует.

```{r}
# Строим график кумулятивной функции рисков
ggsurvplot(
  surv,
  fun = 'cumhaz',
  conf.int = TRUE,
  risk.table = TRUE
)
```

Вновь на графике пересечения инетрвалов и самих линий -\> отсутсиве различий между полом по уровню риска

```{r}
# Регрессия КОКСА
cox_reg <- coxph(Surv(time, status) ~ sex,
                 data = lung_death)
summary(cox_reg)
```

P = 0.136 -\> Опять же, разница между двумя группами статистически незначима.
